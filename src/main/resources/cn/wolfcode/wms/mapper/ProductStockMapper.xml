<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.wolfcode.wms.mapper.ProductStockMapper">
    <resultMap id="BaseResultMap" type="cn.wolfcode.wms.domain.ProductStock">
        <id column="id" property="id"/>
        <result column="price" property="price"/>
        <result column="storeNumber" property="storeNumber"/>
        <result column="amount" property="amount"/>

        <association property="product" javaType="Product" columnPrefix="p_">
            <id column="id" property="id"/>
            <result column="name" property="name"/>
            <result column="sn" property="sn"/>
            <result column="brandName" property="brandName"/>
        </association>
        <association property="depot" javaType="Depot" columnPrefix="d_">
            <id column="id" property="id"/>
            <result column="name" property="name"/>
        </association>
    </resultMap>


    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO productstock (price, storeNumber, amount, product_id, depot_id)
        VALUES (#{price}, #{storeNumber}, #{amount}, #{product.id}, #{depot.id})
    </insert>


    <update id="updateByPrimaryKey">
        UPDATE productstock
        SET price       = #{price},
            storeNumber = #{storeNumber},
            amount      = #{amount}
        WHERE id = #{id}
    </update>
    <select id="selectByProductIdAndDepotId" resultMap="BaseResultMap">
        SELECT
            ps.id,
            ps.price,
            ps.storeNumber,
            ps.amount,
            p.id p_id,
            p.name p_name,
            d.id d_id,
            d.name d_name
        FROM productstock ps
            JOIN product p ON p.id = ps.product_id
            JOIN depot d ON d.id = ps.depot_id
        WHERE ps.product_id = #{productId} AND ps.depot_id = #{depotId}
    </select>

    <select id="query4List" resultMap="BaseResultMap">
        SELECT
            ps.id,
            ps.price,
            ps.storeNumber,
            ps.amount,
            p.id p_id,
            p.name p_name,
            p.sn p_sn,
            p.brandName p_brandName,
            d.id d_id,
            d.name d_name
        FROM productstock ps
            JOIN product p ON p.id = ps.product_id
            JOIN depot d ON d.id = ps.depot_id
        <include refid="where_sql"/>
        LIMIT #{start},#{pageSize}
    </select>


    <select id="query4Count" resultType="int">
        SELECT count(ps.id)
        FROM productstock ps
            JOIN product p ON p.id = ps.product_id
            JOIN depot d ON d.id = ps.depot_id
        <include refid="where_sql"/>
    </select>

    <sql id="where_sql">
        <if test="keyword != null ">
            and(p.name like concat('%',#{keyword},'%') or p.sn like concat('%',#{keyword},'%'))
        </if>
        <if test="depotId > 0">
            and d.id = #{brandId}
        </if>
        <if test="brandId > 0">
            and p.brand_id = #{brandId}
        </if>
        <if test="warnNum != null ">
            and ps.storeNumber &lt;= #{warnNum}
        </if>


    </sql>


</mapper>